//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TiaTools.Properties {
    using System;
    
    
    /// <summary>
    ///   Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
    /// </summary>
    // Questa classe è stata generata automaticamente dalla classe StronglyTypedResourceBuilder.
    // tramite uno strumento quale ResGen o Visual Studio.
    // Per aggiungere o rimuovere un membro, modificare il file con estensione ResX ed eseguire nuovamente ResGen
    // con l'opzione /str oppure ricompilare il progetto VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TiaTools.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
        ///   ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a DATA_BLOCK &quot;AI_$VAR_NAME$&quot;
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///NON_RETAIN
        ///&quot;FB_Analog_IN&quot;
        ///
        ///BEGIN
        ///
        ///END_DATA_BLOCK
        ///.
        /// </summary>
        internal static string DB_AI {
            get {
                return ResourceManager.GetString("DB_AI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a DATA_BLOCK &quot;AO_$VAR_NAME$&quot;
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///NON_RETAIN
        ///&quot;FB_Analog_OUT&quot;
        ///
        ///BEGIN
        ///
        ///END_DATA_BLOCK
        ///.
        /// </summary>
        internal static string DB_AO {
            get {
                return ResourceManager.GetString("DB_AO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a DATA_BLOCK &quot;DI_$VAR_NAME$&quot;
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///NON_RETAIN
        ///&quot;FB_Digital_IN&quot;
        ///
        ///BEGIN
        ///
        ///END_DATA_BLOCK
        ///.
        /// </summary>
        internal static string DB_DI {
            get {
                return ResourceManager.GetString("DB_DI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a DATA_BLOCK &quot;DO_$VAR_NAME$&quot;
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///NON_RETAIN
        ///&quot;FB_Digital_OUT&quot;
        ///
        ///BEGIN
        ///
        ///END_DATA_BLOCK
        ///.
        /// </summary>
        internal static string DB_DO {
            get {
                return ResourceManager.GetString("DB_DO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a DATA_BLOCK &quot;DB_Msg&quot;
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///NON_RETAIN
        ///   VAR 
        ///      Msg : &quot;Msg&quot;;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///
        ///END_DATA_BLOCK
        ///
        ///.
        /// </summary>
        internal static string DB_Msg {
            get {
                return ResourceManager.GetString("DB_Msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a DATA_BLOCK &quot;DB_SM&quot;
        ///{ S7_Optimized_Access := &apos;FALSE&apos; }
        ///VERSION : 0.1
        ///NON_RETAIN
        ///   STRUCT 
        ///      Sm : Array[0..$SM_TOT_NB$] of &quot;Sm_GEN&quot;;
        ///   END_STRUCT;
        ///
        ///BEGIN
        ///
        ///END_DATA_BLOCK.
        /// </summary>
        internal static string DB_SM {
            get {
                return ResourceManager.GetString("DB_SM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a DATA_BLOCK &quot;DB_SM&quot;
        ///{ S7_Optimized_Access := &apos;FALSE&apos; }
        ///VERSION : 0.1
        ///NON_RETAIN
        ///   STRUCT 
        ///      Sm : Array[0..$SM_TOT_NB$] of &quot;Sm_GEN&quot;;
        ///   END_STRUCT;
        ///
        ///BEGIN
        ///
        ///END_DATA_BLOCK.
        /// </summary>
        internal static string DB_SM1 {
            get {
                return ResourceManager.GetString("DB_SM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION_BLOCK &quot;FB_Analog_IN&quot;
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_INPUT 
        ///      Signal : Int;
        ///   END_VAR
        ///
        ///   VAR 
        ///      Value : Real;
        ///      Config : &quot;Analog_IN_CONFIG&quot;;
        ///      Alarm : &quot;Analog_IN_ALARM&quot;;
        ///      Aux : &quot;Analog_IN_AUX&quot;;
        ///      Hmi { S7_SetPoint := &apos;False&apos;} : &quot;Hmi_IO&quot;;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FB_Analog_IN
        ///	//Version: 0.1
        ///	//Description: Analogic IN Management
        ///	//Developer: Topcast
        ///	 [stringa troncata]&quot;;.
        /// </summary>
        internal static string FB_Analog_IN {
            get {
                return ResourceManager.GetString("FB_Analog_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION_BLOCK &quot;FB_Analog_OUT&quot;
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_OUTPUT 
        ///      Signal : Int;
        ///   END_VAR
        ///
        ///   VAR 
        ///      Command : Real;
        ///      Config { S7_SetPoint := &apos;False&apos;} : &quot;Analog_OUT_CONFIG&quot;;
        ///      Aux { S7_SetPoint := &apos;False&apos;} : &quot;Analog_OUT_AUX&quot;;
        ///      Hmi : &quot;Hmi_IO&quot;;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FB_Analog_OUT
        ///	//Version: 0.1
        ///	//Description: Analogic OUT Management
        ///	//Developer: Topcast
        ///	 [stringa troncata]&quot;;.
        /// </summary>
        internal static string FB_Analog_OUT {
            get {
                return ResourceManager.GetString("FB_Analog_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION_BLOCK &quot;FB_Digital_IN&quot;
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_INPUT 
        ///      Signal : Bool;
        ///   END_VAR
        ///
        ///   VAR 
        ///      Status { S7_SetPoint := &apos;True&apos;} : Bool;
        ///      F_Status { S7_SetPoint := &apos;True&apos;} : Bool;
        ///      R_Status { S7_SetPoint := &apos;True&apos;} : Bool;
        ///      Config { S7_SetPoint := &apos;False&apos;} : &quot;Digital_IN_CONFIG&quot;;
        ///      Aux { S7_SetPoint := &apos;False&apos;} : &quot;Digital_IN_AUX&quot;;
        ///      Hmi : &quot;Hmi_IO&quot;;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//******************************************************** [stringa troncata]&quot;;.
        /// </summary>
        internal static string FB_Digital_IN {
            get {
                return ResourceManager.GetString("FB_Digital_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION_BLOCK &quot;FB_Digital_OUT&quot;
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_OUTPUT 
        ///      Signal : Bool;
        ///   END_VAR
        ///
        ///   VAR 
        ///      Command : Bool;
        ///      Status : Bool;
        ///      R_Status : Bool;
        ///      F_Status : Bool;
        ///      Config { S7_SetPoint := &apos;False&apos;} : &quot;Digital_OUT_CONFIG&quot;;
        ///      Aux : &quot;Digital_OUT_AUX&quot;;
        ///      Hmi : &quot;Hmi_IO&quot;;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FB_Digital_OUT
        ///	//Version: x.x
        ///	//Description:  [stringa troncata]&quot;;.
        /// </summary>
        internal static string FB_Digital_OUT {
            get {
                return ResourceManager.GetString("FB_Digital_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Analog_IN&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Analog_IN
        ///	//Version: x.x
        ///	//Description: Instances OF FB_Analog_IN
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	//ELESMPIO DI RCHIAMO FB_Analog_IN
        ///	//********************************************************************//
        ///	//Si considera un ingresso analogico definito sul [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Analog_IN {
            get {
                return ResourceManager.GetString("FC_Analog_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Analog_IN_Config&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Analog_IN_Config
        ///	//Version: x.x
        ///	//Description: Configuration Analog IN
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///
        ///	//ESEMPIO DI CONFIGURAZIONE 
        ///	//********************************************************************//
        ///	// &quot;AI_INGRESSO_ANALOGICO&quot;.Config.Name := 32 [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Analog_IN_Config {
            get {
                return ResourceManager.GetString("FC_Analog_IN_Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a 	//AI_$VAR_NAME$
        ///	//********************************************************************//
        ///	&quot;AI_$VAR_NAME$&quot;.Config.HighScaleValue := 0;
        ///	&quot;AI_$VAR_NAME$&quot;.Config.LowScaleValue := 0;
        ///	&quot;AI_$VAR_NAME$&quot;.Config.HighLimit := 0;
        ///	&quot;AI_$VAR_NAME$&quot;.Config.LowLimit := 0;
        ///	&quot;AI_$VAR_NAME$&quot;.Config.ManualCompValue := 0;
        ///	&quot;AI_$VAR_NAME$&quot;.Config.ManualScalingValue := 0;
        ///	&quot;AI_$VAR_NAME$&quot;.Config.AlarmDelay := T#5S;
        ///	&quot;AI_$VAR_NAME$&quot;.Config.IsBipolar := 0;
        ///	&quot;AI_$VAR_NAME$&quot;.Config.DoNotScale := 0;
        ///	&quot;AI_$VAR_NAME$&quot;.Confi [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Analog_IN_Config_Part {
            get {
                return ResourceManager.GetString("FC_Analog_IN_Config_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a //AI_$VAR_NAME$
        /////********************************************************************//
        ///&quot;AI_$VAR_NAME$&quot;(&quot;$VAR_NAME$&quot;);
        ///.
        /// </summary>
        internal static string FC_Analog_IN_Part {
            get {
                return ResourceManager.GetString("FC_Analog_IN_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Analog_OUT&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Analog_OUT
        ///	//Version: x.x
        ///	//Description: Instances OF FB_Analog_OUT
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	//ELESMPIO DI RCHIAMO FB_Analog_OUT
        ///	//********************************************************************//
        ///	//Si considera una uscita analogica definito  [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Analog_OUT {
            get {
                return ResourceManager.GetString("FC_Analog_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Analog_OUT_Config&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Analog_OUT_Config
        ///	//Version: x.x
        ///	//Description: Configuration Analog OUT
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	//ESEMPIO DI CONFIGURAZIONE
        ///	//********************************************************************//
        ///	// &quot;AO_USCITA_ANALOGICA.AnalogOUT.Config. [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Analog_OUT_Config {
            get {
                return ResourceManager.GetString("FC_Analog_OUT_Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a 	//AO_$VAR_NAME$
        ///	//********************************************************************//
        ///	&quot;AO_$VAR_NAME$&quot;.Config.HighUnscaleLimit := 0;
        ///	&quot;AO_$VAR_NAME$&quot;.Config.LowUnscaleLimit := 0;
        ///	&quot;AO_$VAR_NAME$&quot;.Config.IsBipolar := 0;
        ///.
        /// </summary>
        internal static string FC_Analog_OUT_Config_Part {
            get {
                return ResourceManager.GetString("FC_Analog_OUT_Config_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a //AO_$VAR_NAME$
        /////********************************************************************//
        ///&quot;AO_$VAR_NAME$&quot;(&quot;$VAR_NAME$&quot;);
        ///.
        /// </summary>
        internal static string FC_Analog_OUT_Part {
            get {
                return ResourceManager.GetString("FC_Analog_OUT_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Digital_IN&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Digital_IN
        ///	//Version: x.x
        ///	//Description: Instances OF FB_Digital_In
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	//ELESMPIO DI RCHIAMO FB_Digital_IN
        ///	//********************************************************************//
        ///	//Si considera un ingresso digitale definito  [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Digital_IN {
            get {
                return ResourceManager.GetString("FC_Digital_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Digital_IN_Config&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Digital_IN_Config
        ///	//Version: x.x
        ///	//Description: Configuration Digital IN
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	//ESEMPIO DI CONFIGURAZIONE
        ///	//********************************************************************//
        ///	//&quot;DI_INGRESSO_DIGITALE&quot;.Config.Name := 1 [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Digital_IN_Config {
            get {
                return ResourceManager.GetString("FC_Digital_IN_Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a //DI_$VAR_NAME$
        /////********************************************************************//
        ///&quot;DI_$VAR_NAME$&quot;.DigitalIN.DebounceTime := T#0MS;
        ///.
        /// </summary>
        internal static string FC_Digital_IN_Config_Part {
            get {
                return ResourceManager.GetString("FC_Digital_IN_Config_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a //DI_$VAR_NAME$
        /////********************************************************************//
        ///&quot;DI_$VAR_NAME$&quot;(&quot;$VAR_NAME$&quot;);
        ///.
        /// </summary>
        internal static string FC_Digital_IN_Part {
            get {
                return ResourceManager.GetString("FC_Digital_IN_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Digital_OUT&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Digital_OUT
        ///	//Version: x.x
        ///	//Description: Instances OF FB_Digital_OUT
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	//ELESMPIO DI RCHIAMO FB_Digital_OUT
        ///	//********************************************************************//
        ///	//Si considera una uscita digitale defini [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Digital_OUT {
            get {
                return ResourceManager.GetString("FC_Digital_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Digital_OUT_Config&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Digital_OUT_Config
        ///	//Version: x.x
        ///	//Description: Configuration Digital OUT
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	//ESEMPIO DI CONFIGURAZIONE
        ///	//********************************************************************//
        ///	// &quot;DO_USCITA_DIGITALE&quot;.Config.Name := [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Digital_OUT_Config {
            get {
                return ResourceManager.GetString("FC_Digital_OUT_Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a //DO_$VAR_NAME$
        /////********************************************************************//
        ///&quot;DO_$VAR_NAME$&quot;.Config.OFFDelay := T#0MS;
        ///&quot;DO_$VAR_NAME$&quot;.Config.OnDelay := T#0MS;
        ///.
        /// </summary>
        internal static string FC_Digital_OUT_Config_Part {
            get {
                return ResourceManager.GetString("FC_Digital_OUT_Config_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a //DO_$VAR_NAME$
        /////********************************************************************//
        ///&quot;DO_$VAR_NAME$&quot;(&quot;$VAR_NAME$&quot;);
        ///.
        /// </summary>
        internal static string FC_Digital_OUT_Part {
            get {
                return ResourceManager.GetString("FC_Digital_OUT_Part", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Msg_Config&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_TEMP 
        ///      i : Int;
        ///   END_VAR
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Msg_Config
        ///	//Version: 0.1
        ///	//Description: FC_Msg_Config
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///
        ///	//Msg General Config
        ///	//********************************************************************//
        ///	&quot;DB_Msg&quot;.Msg.Config.MsgHmiWordNb [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Msg_Config_Begin {
            get {
                return ResourceManager.GetString("FC_Msg_Config_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a 	//Msg $MSG_NUMBER$ - $MSG_DEVICE$ - $MSG_TEXT$
        ///	//********************************************************************//
        ///	&quot;DB_Msg&quot;.Msg.Msg[$MSG_NUMBER$].Config.Reaction[$SM_NUMBER$] := $MSG_REACTION$;.
        /// </summary>
        internal static string FC_Msg_Config_Body {
            get {
                return ResourceManager.GetString("FC_Msg_Config_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a END_FUNCTION.
        /// </summary>
        internal static string FC_Msg_Config_End {
            get {
                return ResourceManager.GetString("FC_Msg_Config_End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Msg_Handler&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_IN_OUT 
        ///      Msg : &quot;Msg&quot;;
        ///   END_VAR
        ///
        ///   VAR_TEMP 
        ///      i : Int;
        ///      ToBeAck : Int;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Msg_Handler
        ///	//Version: 0.1
        ///	//Description: FC_Msg_Handler
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///
        ///	//Reset Msg Pending
        ///	//***************************** [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Msg_Handler_Begin {
            get {
                return ResourceManager.GetString("FC_Msg_Handler_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a     //Msg Reaction
        ///	//********************************************************************//
        ///    FOR #i := 0 TO #Msg.Config.MsgMaxNb DO
        ///        &quot;FC_Msg_Reaction&quot;(MsgNb := #i,
        ///                          Ack := &quot;DB_Msg&quot;.Msg.Ack,
        ///                          Msg := &quot;DB_Msg&quot;.Msg);
        ///    
        ///        &quot;FC_Msg_Store_Sql&quot;(FOData := &quot;DB_FO_Data&quot;.FOData,
        ///                           MsgNb := #i,
        ///                           Msg := &quot;DB_Msg&quot;.Msg);
        ///    END_FOR;
        ///.
        /// </summary>
        internal static string FC_Msg_Handler_Body_None {
            get {
                return ResourceManager.GetString("FC_Msg_Handler_Body_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a 	//Msg $MSG_NUMBER$ - $MSG_DEVICE$ - $MSG_TEXT$
        ///	//********************************************************************//
        ///	&quot;FC_Msg_Reaction&quot;(MsgNb:=$MSG_NUMBER$,
        ///					  Ack := &quot;DB_Msg&quot;.Msg.Ack,
        ///	                  Msg:=&quot;DB_Msg&quot;.Msg);
        ///
        ///	&quot;FC_Msg_Store_Sql&quot;(FOData := &quot;DB_FO_Data&quot;.FOData,
        ///					  MsgNb := $MSG_NUMBER$,
        ///					  Msg:=&quot;DB_Msg&quot;.Msg);
        ///.
        /// </summary>
        internal static string FC_Msg_Handler_Body_Store {
            get {
                return ResourceManager.GetString("FC_Msg_Handler_Body_Store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a 	//Ack
        ///	//********************************************************************//
        ///	IF #Msg.Ack THEN
        ///		#Msg.Ack := 0;
        ///	END_IF;
        ///	
        ///	            
        ///END_FUNCTION.
        /// </summary>
        internal static string FC_Msg_Handler_End {
            get {
                return ResourceManager.GetString("FC_Msg_Handler_End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Msg_Reaction&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_INPUT 
        ///      MsgNb : Int;
        ///      Ack : Bool;
        ///   END_VAR
        ///
        ///   VAR_IN_OUT 
        ///      Msg : &quot;Msg&quot;;
        ///   END_VAR
        ///
        ///   VAR_TEMP 
        ///      i : Int;
        ///      HmiWordNb : Int;
        ///      HmiBitNb : Int;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///
        ///    //********************************************************************//
        ///    //Name: FC_Msg_Reaction
        ///    //Version: 0.1
        ///    //Description: FC_Msg_Reaction
        ///    //Developer: Topcast
        ///    //************ [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Msg_Reaction {
            get {
                return ResourceManager.GetString("FC_Msg_Reaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Msg_Store_Sql&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_INPUT 
        ///      MsgNb : Int;
        ///      FOData : Array[0..11] of &quot;Fo_DATA&quot;;
        ///   END_VAR
        ///
        ///   VAR_IN_OUT 
        ///      Msg : &quot;Msg&quot;;
        ///   END_VAR
        ///
        ///   VAR_TEMP 
        ///      i : Int;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///    //********************************************************************//
        ///    //Name: FC_Msg_Store_Sql
        ///    //Version: 0.1
        ///    //Description: FC_Msg_Store_Sql
        ///    //Developer: Topcast
        ///    //********************************** [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_Msg_Store_Sql {
            get {
                return ResourceManager.GetString("FC_Msg_Store_Sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Msg_Trigger&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Msg_Trigger
        ///	//Version: 0.1
        ///	//Description: FC_Msg_Trigger
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///
        ///.
        /// </summary>
        internal static string FC_Msg_Trigger_Begin {
            get {
                return ResourceManager.GetString("FC_Msg_Trigger_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a 	//Msg $MSG_NUMBER$ - $MSG_DEVICE$ - $MSG_TEXT$
        ///	//********************************************************************//
        ///	&quot;DB_Msg&quot;.Msg.Msg[$MSG_NUMBER$].Trigger := FALSE;
        ///.
        /// </summary>
        internal static string FC_Msg_Trigger_Body {
            get {
                return ResourceManager.GetString("FC_Msg_Trigger_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_SM_$SM_NB$&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_TEMP 
        ///      SMN : Int;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_SM_$SM_NB$
        ///	//Version: x.x
        ///	//Description: State Machine $SM_NB$ ($SM_NAME$)
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///
        ///	//DESCRIZIONE
        ///	//********************************************************************//
        ///	// Questo blocc [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_SM {
            get {
                return ResourceManager.GetString("FC_SM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_SM_Call&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_SM_Call                                     
        ///	//Version: 0.1
        ///	//Description: StateMachine Call
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///
        ///
        ///.
        /// </summary>
        internal static string FC_SM_Call {
            get {
                return ResourceManager.GetString("FC_SM_Call", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_SM_Common&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_INPUT 
        ///      SMN : Int;
        ///      StartPhase : Int;
        ///      Autostart : Bool;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///
        ///    //********************************************************************//
        ///    //Name: FC_SM_Common
        ///    //Version: x.x
        ///    //Description: FC_SM_Common
        ///    //Developer: Topcast
        ///    //********************************************************************//
        ///    
        ///    //PARAMETRI
        ///    //******************************** [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_SM_Common {
            get {
                return ResourceManager.GetString("FC_SM_Common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_Hmi_SM_$SM_NAME$&quot; : Void
        ///{ S7_Optimized_Access := &apos;FALSE&apos; }
        ///VERSION : 0.1
        ///   VAR_TEMP 
        ///      FILL_RET_VAL : Int;
        ///      FILL_B_VAL : Byte;
        ///   END_VAR
        ///
        ///   VAR CONSTANT 
        ///      SMN : Int := 1;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_Hmi_SM_$SM_NAME$
        ///	//Version: x.x
        ///	//Description: SM $SM_NAME$ HMI Management
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	CASE &quot;DB [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_SM_Hmi {
            get {
                return ResourceManager.GetString("FC_SM_Hmi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a  	        //$PHASE_NAME$
        ///	        //********************************************************************// 
        ///	    &quot;$PHASE_NAME$&quot;:
        ///	        
        ///			;
        ///	        //HMI Management
        ///			(*Hmi Logic Here*).
        /// </summary>
        internal static string FC_SM_Hmi_Step {
            get {
                return ResourceManager.GetString("FC_SM_Hmi_Step", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_SM_Pause_Seq&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_INPUT 
        ///      SMN : Int;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_SM_Pause_Seq
        ///	//Version: x.x
        ///	//Description: FC_SM_Pause_Seq
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///
        ///	//UTILIZZO
        ///	//********************************************************************//
        ///	//Definire per ogni macchina a  [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_SM_Pause_Seq {
            get {
                return ResourceManager.GetString("FC_SM_Pause_Seq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_$PHASE_NAME$&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_$PHASE_NAME$
        ///	//Version: x.x
        ///	//Description: FC_$PHASE_NAME$
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///
        ///	//Step Name 
        ///	&quot;DB_SM&quot;.Sm[$SM_NB$].Status.StepName := &apos;$PHASE_NAME$&apos;;
        ///	
        ///	//Step Logic
        ///	(*Add Phase Logic Here*)
        ///	
        ///	//Reset Hmi Controls
        ///	(*Reset Hmi Controls He [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_SM_Phase {
            get {
                return ResourceManager.GetString("FC_SM_Phase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_SM_Reset_Seq&quot; : Void
        ///{ S7_Optimized_Access := &apos;FALSE&apos; }
        ///VERSION : 0.1
        ///   VAR_INPUT 
        ///      SMN : Int;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_SM_Reset_Seq
        ///	//Version: x.x
        ///	//Description: FC_SM_Reset_Seq
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	//UTILIZZO
        ///	//********************************************************************//
        ///	//Definire per ogni macchina  [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_SM_Reset_Seq {
            get {
                return ResourceManager.GetString("FC_SM_Reset_Seq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a         //$PHASE_NAME$
        ///        //********************************************************************// 
        ///    &quot;$PHASE_NAME$&quot;:
        ///        
        ///        &quot;FC_$PHASE_NAME$&quot;();.
        /// </summary>
        internal static string FC_SM_Step {
            get {
                return ResourceManager.GetString("FC_SM_Step", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a FUNCTION &quot;FC_SM_Stop_Seq&quot; : Void
        ///{ S7_Optimized_Access := &apos;TRUE&apos; }
        ///VERSION : 0.1
        ///   VAR_INPUT 
        ///      SMN : Int;
        ///   END_VAR
        ///
        ///
        ///BEGIN
        ///	//********************************************************************//
        ///	//Name: FC_SM_Stop_Seq
        ///	//Version: x.x
        ///	//Description: FC_SM_Stop_Seq
        ///	//Developer: Topcast
        ///	//********************************************************************//
        ///	
        ///	//UTILIZZO
        ///	//********************************************************************//
        ///	//Definire per ogni macchina a st [stringa troncata]&quot;;.
        /// </summary>
        internal static string FC_SM_Stop_Seq {
            get {
                return ResourceManager.GetString("FC_SM_Stop_Seq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a TYPE &quot;Hmi_IO&quot;
        ///VERSION : 0.1
        ///   STRUCT
        ///      Status : Bool;
        ///      Alarm : Bool;
        ///      Manual : Bool;
        ///      On : Bool;
        ///      Off : Bool;
        ///      toggle : Bool;
        ///      ManualEnable : Bool;
        ///      SafeSwitch : Bool;
        ///      Value : Real;
        ///      Command : Real;
        ///      RawValue : Int;
        ///   END_STRUCT;
        ///
        ///END_TYPE
        ///
        ///TYPE &quot;Analog_IN_ALARM&quot;
        ///VERSION : 0.1
        ///   STRUCT
        ///      LowLimitExceeded : Bool;   // Allarme Limite inferiore superato
        ///      HighLimitExceeded : Bool;   // Allarme Limite superiore superato
        ///    [stringa troncata]&quot;;.
        /// </summary>
        internal static string IO_Types {
            get {
                return ResourceManager.GetString("IO_Types", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a TYPE &quot;Msg_CONFIG&quot;
        ///VERSION : 0.1
        ///   STRUCT
        ///      Reaction : Array[0..12] of Int := 13(1);   // Reazione Scaturita dal msg 0 = None,  1 = store, 2 = pause, 3 = Halt
        ///      Class : Int;
        ///      Nb : Int;
        ///   END_STRUCT;
        ///
        ///END_TYPE
        ///
        ///TYPE &quot;Msg_SQL&quot;
        ///VERSION : 0.1
        ///   STRUCT
        ///      Stored : Bool;
        ///      StoreForAll : Bool;   // Se 1 il msg viene salvato su SQL per tutti gli FO attivi su tutte le macchine a stati
        ///   END_STRUCT;
        ///
        ///END_TYPE
        ///
        ///TYPE &quot;Msg_GEN&quot;
        ///VERSION : 0.1
        ///   STRUCT
        ///      Trigger { S7_SetPo [stringa troncata]&quot;;.
        /// </summary>
        internal static string Msg_Types {
            get {
                return ResourceManager.GetString("Msg_Types", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a TYPE &quot;Sm_COMMANDS&quot;
        ///VERSION : 0.1
        ///   STRUCT
        ///      Start : Bool;   // Trigger che mette in play la macchina a stati
        ///      Pause : Bool;   // Trigger che mette in pausa la macchina a stati
        ///      Stop : Bool;   // Trigger che mette in pausa la macchina a stati
        ///      Reset : Bool;   // Trigger che resetta la macchina a stati
        ///   END_STRUCT;
        ///
        ///END_TYPE
        ///
        ///TYPE &quot;Sm_FLAGS&quot;
        ///VERSION : 0.1
        ///   STRUCT
        ///      Release : Bool;   // Flag da utilizzare nel primo step della macchina a stati, si utilizza per interpola [stringa troncata]&quot;;.
        /// </summary>
        internal static string SM_Types {
            get {
                return ResourceManager.GetString("SM_Types", resourceCulture);
            }
        }
    }
}
