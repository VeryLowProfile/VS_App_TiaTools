FUNCTION_BLOCK "FB_Digital_OUT"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_OUTPUT 
      Signal : Bool;
   END_VAR

   VAR 
      DigitalOUT : "Digital_OUT";
      T_OnDelay {InstructionName := 'TON_TIME'; LibVersion := '1.0'} : TON_TIME;
      T_OffDelay {InstructionName := 'TOF_TIME'; LibVersion := '1.0'} : TOF_TIME;
      R_DigitalOUT {InstructionName := 'R_TRIG'; LibVersion := '1.0'} : R_TRIG;
      F_DigitalOUT {InstructionName := 'F_TRIG'; LibVersion := '1.0'} : F_TRIG;
      CommandResult { S7_SetPoint := 'True'} : Bool;
   END_VAR


BEGIN
	//********************************************************************//
	//Name: FB_Digital_OUT
	//Version: x.x
	//Description: Digital Out Management
	//Developer: Topcast
	//********************************************************************//
	
	//PARAMETRI
	//********************************************************************//
	//Signal: bit di uscita dichiarato sulla tabella delle variabili PLC
	
	//ESEMPIO DI UTILIZZO
	//********************************************************************//
	//Dopo aver richiamato correttamente il blocco ed avere eseguito la configurazione si può accedere alla varei funzioni nel seguente modo.
	//Si fa riferimento alla variabile di esempio "USCITA_DIGITALE" usata negli esempi precedenti
	//
	//Comado dell'uscita digitale
	//"DO_USCITA_GITALE".DigitalOUT.Command := Valore che si desidera assegnare all'uscita (Questo valore deve essere di tipo Bool)
	//
	//Interrogazione dello stato dell'uscita
	//IF "DO_USCITA_GITALE".DigitalOUT.Status THEN
	//
	//  Some PLC Code ....
	//  
	//END_IF;
	
	//Command Result
	//********************************************************************//
	IF #DigitalOUT.Hmi.Manual THEN
	    IF #DigitalOUT.Hmi.On THEN
	        #DigitalOUT.Hmi.On := 0;
	        #CommandResult := 1;
	    ELSIF #DigitalOUT.Hmi.Off THEN
	        #DigitalOUT.Hmi.Off := 0;
	        #CommandResult := 0;
	    END_IF;
	ELSE
	    #CommandResult := #DigitalOUT.Command;
	END_IF;
	
	//Delay
	//********************************************************************//
	#T_OnDelay(IN := #CommandResult,
	           PT := #DigitalOUT.Config.OnDelay);
	
	#T_OffDelay(IN := #T_OffDelay.Q,
	            PT := #DigitalOUT.Config.OFFDelay);
	
	//Output
	//********************************************************************//
	#Signal := #T_OnDelay.Q OR #T_OffDelay.Q;
	
	//Status
	//********************************************************************//
	#DigitalOUT.Status := #Signal;
	
	//Hmi
	//********************************************************************//
	#DigitalOUT.Hmi.Status := #DigitalOUT.Status;
	#DigitalOUT.Hmi.Name := #DigitalOUT.Config.Name;
	
	//Edges
	//********************************************************************//
	#R_DigitalOUT(CLK := #Signal);
	#F_DigitalOUT(CLK := #Signal);
	
	// //Events
	// //********************************************************************//
	// IF #DigitalOUT.Config.EnableStoreEvent THEN
	//     IF #R_DigitalOUT.Q THEN
	//         "FC_Sql_Buffer_Add"(Fo := #Fo_Data[#DigitalOUT.Config.Smn].Resume.FO,
	//                             TypeOfRequest := "SQL_INSERT_Events",
	//                             EventOrMsgNb := #DigitalOUT.Config.R_EventNb,
	//                             TrendTimeSec := 0,
	//                             TrendVar1 := 0,
	//                             TrendVar2 := 0,
	//                             TrendVar3 := 0,
	//                             TrendVar4 := 0);
	//     END_IF;
	    
	//     IF #F_DigitalOUT.Q THEN
	//         "FC_Sql_Buffer_Add"(Fo := #Fo_Data[#DigitalOUT.Config.Smn].Resume.FO,
	//                             TypeOfRequest := "SQL_INSERT_Events",
	//                             EventOrMsgNb := #DigitalOUT.Config.F_EventNb,
	//                             TrendTimeSec := 0,
	//                             TrendVar1 := 0,
	//                             TrendVar2 := 0,
	//                             TrendVar3 := 0,
	//                             TrendVar4 := 0);
	//     END_IF;
	// END_IF;
	
	
	
END_FUNCTION_BLOCK

