FUNCTION_BLOCK "FB_Digital_OUT"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_OUTPUT 
      Signal : Bool;
   END_VAR

   VAR 
      Command : Bool;
      Status : Bool;
      R_Status : Bool;
      F_Status : Bool;
      Config { S7_SetPoint := 'False'} : "Digital_OUT_CONFIG";
      Aux : "Digital_OUT_AUX";
      Hmi : "Hmi_IO";
   END_VAR


BEGIN
	//********************************************************************//
	//Name: FB_Digital_OUT
	//Version: x.x
	//Description: Digital Out Management
	//Developer: Topcast
	//********************************************************************//
	
	//PARAMETRI
	//********************************************************************//
	//Signal: bit di uscita dichiarato sulla tabella delle variabili PLC
	
	//ESEMPIO DI UTILIZZO
	//********************************************************************//
	//Dopo aver richiamato correttamente il blocco ed avere eseguito la configurazione si può accedere alla varei funzioni nel seguente modo.
	//Si fa riferimento alla variabile di esempio "USCITA_DIGITALE" usata negli esempi precedenti
	//
	//Comado dell'uscita digitale
	//"DO_USCITA_GITALE".Command := Valore che si desidera assegnare all'uscita (Questo valore deve essere di tipo Bool)
	//
	//Interrogazione dello stato dell'uscita
	//IF "DO_USCITA_GITALE".Status THEN
	//
	//  Some PLC Code ....
	//  
	//END_IF;
	
	//Manual Command
	//********************************************************************//
	IF #Hmi.Off THEN
	    #Hmi.Off := 0;
	    IF #Hmi.Manual THEN
	        IF #Hmi.ManualEnable THEN
	            IF #Hmi.SafeSwitch THEN
	                IF #Command THEN
	                    #Command := 0;
	                END_IF;
	            END_IF;
	        END_IF;
	    END_IF;
	END_IF;
	
	IF #Hmi.On THEN
	    #Hmi.On := 0;
	    IF #Hmi.Manual THEN
	        IF #Hmi.ManualEnable THEN
	            IF #Hmi.SafeSwitch THEN
	                IF NOT #Command THEN
	                    #Command := 1;
	                END_IF;
	            END_IF;
	        END_IF;
	    END_IF;
	END_IF;
	
	//Delay
	//********************************************************************//
	#Aux.#T_OnDelay(IN := #Command OR (#Hmi.toggle AND #Hmi.Manual AND #Hmi.ManualEnable),
	                PT := #Config.OnDelay);
	
	#Aux.#T_OffDelay(IN := #Aux.#T_OnDelay.Q,
	                 PT := #Config.OFFDelay);
	
	//Output
	//********************************************************************//
	#Signal := #Aux.#T_OnDelay.Q OR #Aux.#T_OffDelay.Q;
	
	//Status
	//********************************************************************//
	#Status := #Signal;
	
	//Edges
	//********************************************************************//
	//R
	#R_Status := #Aux.R_Aux <> #Status;
	#Aux.R_Aux := #Status;
	
	//F
	#F_Status := #Aux.F_Aux <> #Status;
	#Aux.F_Aux := #Status;
	
	//Hmi
	//********************************************************************//
	#Hmi.Status := #Status;
	
END_FUNCTION_BLOCK

