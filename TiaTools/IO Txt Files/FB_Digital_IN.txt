FUNCTION_BLOCK "FB_Digital_IN"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      Signal : Bool;
   END_VAR

   VAR 
      Status { S7_SetPoint := 'True'} : Bool;
      F_Status { S7_SetPoint := 'True'} : Bool;
      R_Status { S7_SetPoint := 'True'} : Bool;
      Config { S7_SetPoint := 'False'} : "Digital_IN_CONFIG";
      Aux { S7_SetPoint := 'False'} : "Digital_IN_AUX";
      Hmi : "Hmi_IO";
   END_VAR


BEGIN
	//********************************************************************//
	//Name: FB_Digital_IN
	//Version: x.x
	//Description: Digital IN Management
	//Developer: Topcast
	//********************************************************************//
	
	//PARAMETRI
	//********************************************************************//
	//Signal: bit di ingresso dichiarato sulla tabella delle variabili PLC
	
	//ESEMPIO DI UTILIZZO
	//********************************************************************//
	//Dopo aver richiamato correttamente il blocco ed avere eseguito la configurazione si può accedere alla varei funzioni nel seguente modo.
	//Si fa riferimento alla variabile di esempio "INGRESSO_DIGITALE" usata negli esempi precedenti
	//
	//Lettura dello stato attuale dell'ingresso
	//MyStatus := "DI_INGRESSO_DIGITALE".Status
	//
	//Interrogazione del fronte di salita dell'ingresso
	//IF "DI_INGRESSO_DIGITALE".R_Status THEN (R_Status fornisce il fronte di salita dell'ingresso)
	//
	//  Some PLC code ....
	//
	//END_IF;
	//  
	//Interrogazione del fronte di discesa dell'ingresso
	//IF "DI_INGRESSO_DIGITALE".F_Status THEN (F_Status fornisce il fronte di discesa dell'ingresso)
	//
	//  Some PLC code ....
	//
	//END_IF;
	
	//Debounce
	//********************************************************************//
	#Aux.#T_Debounce(IN := #Signal,
	                 PT := #Config.DebounceTime);
	
	//Status
	//********************************************************************//
	#Status := #Aux.#T_Debounce.Q;
	
	//Edges
	//********************************************************************//
	//R
	#R_Status := #Aux.R_Aux <> #Status;
	#Aux.R_Aux := #Status;
	
	//F
	#F_Status := #Aux.F_Aux <> #Status;
	#Aux.F_Aux := #Status;
	
	//Hmi
	//********************************************************************//
	#Hmi.Status := #Status;
	
END_FUNCTION_BLOCK

