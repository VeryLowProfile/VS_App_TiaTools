TYPE "Analog_IN_ALARM"
VERSION : 0.1
   STRUCT
      LowLimitExceeded : Bool;   // Allarme Limite inferiore superato
      HighLimitExceeded : Bool;   // Allarme Limite superiore superato
   END_STRUCT;

END_TYPE

TYPE "Analog_IN_CONFIG"
VERSION : 0.1
   STRUCT
      "Name" : Int;   // Indice della voce dell'elenco testi che visualizza il nome della I/O su Hmi 
      MUnit : Int;   // Indice della voce dell'elenco testi che visualizza il nome l'unità di misura su Hmi
      HighLimit : Real;   // Limite superiore per generazione allarme
      LowLimit : Real;   // Limite inferiore per generazione allarme
      HighScaleValue : Real;   // Valore massimo fornito dal sensore
      LowScaleValue : Real;   // Valore minimo fornito dal sensore
      CompValue : Real;   // Valore di compensazione da aggiunge al valore fornito dal sensore
      LimitDelay : Time;   // tempo di ritardo sulla generazione dell'allarme sui limiti
      IsBipolar : Bool;   // Flag che indica se il sensore lavora in modalità bipolar
      DoNotScale : Bool;   // Se 1 allora non si esegue la scalatura ma si utilizza il valore row fornito dall'ingresso
      AddCompensation : Bool;   // Se 1 si aggiunge CompValue al valore fornito dal sensore
      EnableAlarm : Bool;   // Se 1 Abilita la generazione degli allarmi sui Limiti
   END_STRUCT;

END_TYPE

TYPE "Analog_OUT_CONFIG"
VERSION : 0.1
   STRUCT
      "Name" : Int;   // Indice della voce dell'elenco testi che visualizza il nome della I/O su Hmi 
      MUnit : Int;   // Indice della voce dell'elenco testi che visualizza il nome l'unità di misura su Hmi
      HighUnscaleLimit : Real;   // Valore massimo della variabile di processo legata a questa uscita analogica 
      LowUnscaleLimit : Real;   // Valore minimo della variabile di processo legata a questa uscita analogica 
      IsBipolar : Bool;   // Flag che indica se il sensore lavora in modalità bipolar
   END_STRUCT;

END_TYPE

TYPE "Analog_IN"
VERSION : 0.1
   STRUCT
      Value : Real;   // Valore Della variabile
      Config : "Analog_IN_CONFIG";   // Parametri di configurazione
      Alarm : "Analog_IN_ALARM";   // Allarmi
      Hmi : "Hmi_IO";   // Parametri per HMI
   END_STRUCT;

END_TYPE

TYPE "Analog_OUT"
VERSION : 0.1
   STRUCT
      Command : Real;   // Comando
      Config : "Analog_OUT_CONFIG";   // Parametri di Configurazione
      Hmi : "Hmi_IO";   // Parametri HMI
   END_STRUCT;

END_TYPE

TYPE "Digital_IN_CONFIG"
VERSION : 0.1
   STRUCT
      "Name" : Int;   // Indice della voce dell'elenco testi che visualizza il nome della I/O su Hmi 
      R_EventNb : Int;   // Not used
      F_EventNb : Int;   // Not Used
      Smn : Int;   // Not Used
      DebounceTime : Time;   // Tempo filtro antirimbalzo
      EnableStoreEvent : Bool;   // Not Used
   END_STRUCT;

END_TYPE

TYPE "Digital_OUT_CONFIG"
VERSION : 0.1
   STRUCT
      "Name" : Int;   // Indice della voce dell'elenco testi che visualizza il nome della I/O su Hmi 
      R_EventNb : Int;   // Not Used
      F_EventNb : Int;   // Not Used
      Smn : Int;   // Not Used
      OnDelay : Time;   // Tempo di ritardo all'attivazione
      OFFDelay : Time;   // Tempo di ritardo sul rilascio
      EnableStoreEvent : Bool;   // Not Used
   END_STRUCT;

END_TYPE

TYPE "Digital_IN"
VERSION : 0.1
   STRUCT
      Status : Bool;   // Valore Della variabile
      R_Status : Bool;   // Fronte di salita della variabile
      F_Status : Bool;   // Fronte di discesa della variabile
      Config : "Digital_IN_CONFIG";   // Parametri di Configurazione
      Hmi : "Hmi_IO";   // Parametri HMIù
   END_STRUCT;

END_TYPE

TYPE "Digital_OUT"
VERSION : 0.1
   STRUCT
      Status : Bool;   // Valore Della variabile
      Command : Bool;   // Comando 
      Config : "Digital_OUT_CONFIG";   // Parametri di Configurazione
      Hmi : "Hmi_IO";   // Parametri HMI
   END_STRUCT;

END_TYPE

TYPE "Hmi_IO"
VERSION : 0.1
   STRUCT
      Status : Bool;
      Alarm : Bool;
      Manual : Bool;
      On : Bool;
      Off : Bool;
      "Name" : Int;
      MUnit : Int;
      Value : Real;
      Command : Real;
   END_STRUCT;

END_TYPE

